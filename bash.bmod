#!/usr/bin/env bash

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2, June 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/gpl-2.0.html>,
# or in pdf format at <http://www.dhampir.no/stuff/private/gpl-2.0.pdf>

# Copyright 2013 - Ã˜yvind 'bolt' Hvidsten   <bolt@dhampir.no>

! ${GHOST:-false} || return 0

if [[ -z "${bash_file:-}" ]]; then
	sf_mkfile -qo "bash_file"
fi

function bash_do
{
	if ! type lynx >/dev/null 2>&1; then
		reply "error - lynx was not found"
		return
	fi

	local url="http://www.bash.org/?"
	if [[ -z "${@:-}" ]]; then
		url+="random1"
	elif sf_integer "$@"; then
		url+="$*"
	else
		url+="search=$(sf_urlencode "$*")"
	fi

	if
		! lynx -dump -nolist -nomargins -width=1024 "$url" >"$bash_file" 2>/dev/null ||
		sf_isemptyfile "$bash_file"
	then
		reply "error - no output"
	fi

	local oldtx=$TXCOUNT

	local line printing=false
	while read -r line; do
		read -r line <<<"$line"
		case "$line" in
			'') ;;
			'#'*' +('*')- [X]')
				$printing || { printing=true; continue; }
			;&
			'Search '*'Sort by:'*|\
			'Home / Latest / Browse / Random'*)
				! $printing || break
			;;
			*)     
				if $printing; then
					say "$reply" "$line"
					sleep 0.5
				fi
			;;
		esac
	done <"$bash_file"

	if ((oldtx == TXCOUNT )); then
		reply "no result"
	fi
}

if [[ -n "$reply" ]] && [[ "${data_larray[0]}" = "bash" ]]; then
	if (( data_count == 1 )); then
		bash_do
	else
		bash_do "$(dfromi 1)"
	fi
fi
