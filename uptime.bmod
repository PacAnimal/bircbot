#!/usr/bin/env bash

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2, June 1991.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/gpl-2.0.html>,
# or in pdf format at <http://www.dhampir.no/stuff/private/gpl-2.0.pdf>

# Copyright 2014 - Ã˜yvind 'bolt' Hvidsten   <bolt@dhampir.no>

! ${GHOST:-false} || return 0

if [[ -z "${uptime_death:-}" ]]; then
	uptime_death=${UPTIME_LIMIT:-0}
	(( uptime_death *= 60 )) || :
	if ((uptime_death > 0)) && [[ -n "${UPTIME_RANDOM:-}" ]]; then
		(( uptime_death += ( UPTIME_RANDOM * (RANDOM%60) ) )) || :
	fi
	if (( uptime_death > 0 )); then
		sf_stdout "Will die in $uptime_death seconds..."
	fi
fi

function uptime_tick
{
	(( uptime_death > 0 )) && (( uptime_death < SECONDS )) || return 0
	if [[ -n "${UPTIME_MESSAGE:-}" ]]; then
		say_all "$UPTIME_MESSAGE"
	fi
	sf_stdout "Exiting because of \$UPTIME_LIMIT"
	clean_exit
}

function uptime_reply
{
	local uptime
	IFS=" " read -ra uptime <<<"$(uptime)"
	reply "${uptime[*]}"
	reply "This bot has been running for $(sf_seconds2dayslong $SECONDS)."
}

if [[ -n "$reply" ]]; then
	case "$data" in
		uptime)
			uptime_reply
		;;
		host)
			reply "I am running on $(sf_hostname -f)"
		;;
	esac
fi
